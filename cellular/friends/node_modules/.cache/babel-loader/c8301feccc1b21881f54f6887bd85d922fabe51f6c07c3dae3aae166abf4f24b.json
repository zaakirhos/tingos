{"ast":null,"code":"var _jsxFileName = \"/Users/zakirhossain/Tech/my-code-pot/cellular/friends/src/components/Grid.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport { shuffleMatrix } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = {\n  1: \"264653\",\n  2: \"2a9d8f\",\n  3: \"e9c46a\",\n  4: \"f4a261\",\n  5: \"e76f51\"\n};\nconst Grid = _ref => {\n  _s();\n  let {\n    initialBunnies\n  } = _ref;\n  const [currentBunnies, setCurrentBunnies] = useState(initialBunnies);\n  const [nextBunnies, setNextBunnies] = useState();\n  const [counter, setCounter] = useState(0);\n\n  // const randomBunnies = useMemo(() => shuffleArray(randoms()));\n  // console.log(randomBunnies);\n  useEffect(() => {\n    // animate();\n    // let newArray = shuffleMatrix(currentBunnies);\n    setInterval(() => {\n      // setCurrentBunnies(newArray);\n      setCounter(counter + 1);\n    }, 1000);\n    // return () => {\n    //   second;\n    // };\n  }, [counter]);\n  const createCells = () => {\n    let cells = [];\n    for (let i = 0; i < currentBunnies.length; i++) {\n      for (let j = 0; j < currentBunnies[0].length; j++) {\n        let color = currentBunnies[i][j] <= 5 ? colors[currentBunnies[i][j]] : null;\n        cells.push( /*#__PURE__*/_jsxDEV(Cell, {\n          color: \"#\" + color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this));\n      }\n    }\n    return cells;\n  };\n  return /*#__PURE__*/_jsxDEV(GridDive, {\n    children: createCells()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"czMRfJnz/xVraXRXoZCT879o5fo=\");\n_c = Grid;\nexport default Grid;\nconst GridDive = styled.div`\n  display: grid;\n  grid-template-rows: repeat(32, auto);\n  grid-template-columns: repeat(32, auto);\n  height: 90vh;\n  width: 70vw;\n  grid-gap: 5px;\n  border: 1px solid rgb(110, 105, 105);\n`;\n_c2 = GridDive;\nconst Cell = styled.div`\n  border-radius: 50%;\n  color: white;\n  background: ${props => props.color || \"#d90429\"};\n  display: flex;\n  text-align: center;\n  font-size: 20px;\n`;\n_c3 = Cell;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"GridDive\");\n$RefreshReg$(_c3, \"Cell\");","map":{"version":3,"names":["React","styled","useState","useMemo","useEffect","shuffleMatrix","colors","Grid","initialBunnies","currentBunnies","setCurrentBunnies","nextBunnies","setNextBunnies","counter","setCounter","setInterval","createCells","cells","i","length","j","color","push","GridDive","div","Cell","props"],"sources":["/Users/zakirhossain/Tech/my-code-pot/cellular/friends/src/components/Grid.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport { shuffleMatrix } from \"../utils\";\n\nconst colors = {\n  1: \"264653\",\n  2: \"2a9d8f\",\n  3: \"e9c46a\",\n  4: \"f4a261\",\n  5: \"e76f51\",\n};\n\nconst Grid = ({ initialBunnies }) => {\n  const [currentBunnies, setCurrentBunnies] = useState(initialBunnies);\n  const [nextBunnies, setNextBunnies] = useState();\n  const [counter, setCounter] = useState(0);\n\n  // const randomBunnies = useMemo(() => shuffleArray(randoms()));\n  // console.log(randomBunnies);\n  useEffect(() => {\n    // animate();\n    // let newArray = shuffleMatrix(currentBunnies);\n    setInterval(() => {\n      // setCurrentBunnies(newArray);\n      setCounter(counter + 1);\n    }, 1000);\n    // return () => {\n    //   second;\n    // };\n  }, [counter]);\n  const createCells = () => {\n    let cells = [];\n    for (let i = 0; i < currentBunnies.length; i++) {\n      for (let j = 0; j < currentBunnies[0].length; j++) {\n        let color =\n          currentBunnies[i][j] <= 5 ? colors[currentBunnies[i][j]] : null;\n        cells.push(<Cell color={\"#\" + color}></Cell>);\n      }\n    }\n    return cells;\n  };\n  return (\n    <GridDive>\n      {/* {currentBunnies.map((currentBunnyArray) => {\n        currentBunnyArray.map((currentBunny) => {\n          let color = currentBunny <= 5 ? colors[currentBunny] : null;\n          return <Cell color={\"#\" + color}></Cell>;\n        });\n      })} */}\n      {createCells()}\n    </GridDive>\n  );\n};\n\nexport default Grid;\nconst GridDive = styled.div`\n  display: grid;\n  grid-template-rows: repeat(32, auto);\n  grid-template-columns: repeat(32, auto);\n  height: 90vh;\n  width: 70vw;\n  grid-gap: 5px;\n  border: 1px solid rgb(110, 105, 105);\n`;\n\nconst Cell = styled.div`\n  border-radius: 50%;\n  color: white;\n  background: ${(props) => props.color || \"#d90429\"};\n  display: flex;\n  text-align: center;\n  font-size: 20px;\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,aAAa,QAAQ,UAAU;AAAC;AAEzC,MAAMC,MAAM,GAAG;EACb,CAAC,EAAE,QAAQ;EACX,CAAC,EAAE,QAAQ;EACX,CAAC,EAAE,QAAQ;EACX,CAAC,EAAE,QAAQ;EACX,CAAC,EAAE;AACL,CAAC;AAED,MAAMC,IAAI,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EAC9B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAACM,cAAc,CAAC;EACpE,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,EAAE;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACA;EACAE,SAAS,CAAC,MAAM;IACd;IACA;IACAW,WAAW,CAAC,MAAM;MAChB;MACAD,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;IACzB,CAAC,EAAE,IAAI,CAAC;IACR;IACA;IACA;EACF,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACb,MAAMG,WAAW,GAAG,MAAM;IACxB,IAAIC,KAAK,GAAG,EAAE;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,cAAc,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;MAC9C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,cAAc,CAAC,CAAC,CAAC,CAACU,MAAM,EAAEC,CAAC,EAAE,EAAE;QACjD,IAAIC,KAAK,GACPZ,cAAc,CAACS,CAAC,CAAC,CAACE,CAAC,CAAC,IAAI,CAAC,GAAGd,MAAM,CAACG,cAAc,CAACS,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,GAAG,IAAI;QACjEH,KAAK,CAACK,IAAI,eAAC,QAAC,IAAI;UAAC,KAAK,EAAE,GAAG,GAAGD;QAAM;UAAA;UAAA;UAAA;QAAA,QAAQ,CAAC;MAC/C;IACF;IACA,OAAOJ,KAAK;EACd,CAAC;EACD,oBACE,QAAC,QAAQ;IAAA,UAOND,WAAW;EAAE;IAAA;IAAA;IAAA;EAAA,QACL;AAEf,CAAC;AAAC,GAxCIT,IAAI;AAAA,KAAJA,IAAI;AA0CV,eAAeA,IAAI;AACnB,MAAMgB,QAAQ,GAAGtB,MAAM,CAACuB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MARID,QAAQ;AAUd,MAAME,IAAI,GAAGxB,MAAM,CAACuB,GAAI;AACxB;AACA;AACA,gBAAiBE,KAAK,IAAKA,KAAK,CAACL,KAAK,IAAI,SAAU;AACpD;AACA;AACA;AACA,CAAC;AAAC,MAPII,IAAI;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}