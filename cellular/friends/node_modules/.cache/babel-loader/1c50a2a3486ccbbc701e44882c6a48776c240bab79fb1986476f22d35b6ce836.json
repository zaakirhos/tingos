{"ast":null,"code":"var _jsxFileName = \"/Users/zakirhossain/Tech/my-code-pot/cellular/friends/src/components/Grid.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport { shuffleArray } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = {\n  1: \"blue\",\n  2: \"green\",\n  3: \"#31dead\",\n  4: \"#31de6b\",\n  5: \"#adde31\",\n  6: \"#ded831\",\n  7: \"#dea431\",\n  8: \"#de6e31\",\n  9: \"#de4e31\",\n  10: \"#de3131\",\n  11: \"#f50202\"\n};\nconst Grid = _ref => {\n  _s();\n  let {\n    initialBunnies\n  } = _ref;\n  const [currentBunnies, setCurrentBunnies] = useState(initialBunnies);\n  const [nextBunnies, setNextBunnies] = useState();\n  const [, setStart] = useState(false);\n\n  // const randomBunnies = useMemo(() => shuffleArray(randoms()));\n  // console.log(randomBunnies);\n  useEffect(() => {\n    // animate();\n    let newArray = shuffleArray(currentBunnies);\n    setInterval(() => {\n      setCurrentBunnies(newArray);\n    }, 1000);\n    setStart(!start);\n    // return () => {\n    //   second;\n    // };\n  }, [currentBunnies]);\n  return /*#__PURE__*/_jsxDEV(GridDive, {\n    children: currentBunnies.map(currentBunny => {\n      let color = currentBunny <= 10 ? colors[currentBunny] : null;\n      return /*#__PURE__*/_jsxDEV(Cell, {\n        color: color,\n        children: currentBunny\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"viqpNvcvcTvf/HxaAgs/6fjUJiw=\");\n_c = Grid;\nexport default Grid;\nconst GridDive = styled.div`\n  display: grid;\n  grid-template-rows: repeat(20, auto);\n  grid-template-columns: repeat(25, auto);\n  height: 90vh;\n  width: 70vw;\n  grid-gap: 5px;\n  border: 1px solid rgb(110, 105, 105);\n`;\n_c2 = GridDive;\nconst Cell = styled.div`\n  border-radius: 50%;\n  color: white;\n  background: ${props => props.color || \"#f50202\"};\n  display: flex;\n  text-align: center;\n  font-size: 20px;\n`;\n_c3 = Cell;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"GridDive\");\n$RefreshReg$(_c3, \"Cell\");","map":{"version":3,"names":["React","styled","useState","useMemo","useEffect","shuffleArray","colors","Grid","initialBunnies","currentBunnies","setCurrentBunnies","nextBunnies","setNextBunnies","setStart","newArray","setInterval","start","map","currentBunny","color","GridDive","div","Cell","props"],"sources":["/Users/zakirhossain/Tech/my-code-pot/cellular/friends/src/components/Grid.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport { shuffleArray } from \"../utils\";\n\nconst colors = {\n  1: \"blue\",\n  2: \"green\",\n  3: \"#31dead\",\n  4: \"#31de6b\",\n  5: \"#adde31\",\n  6: \"#ded831\",\n  7: \"#dea431\",\n  8: \"#de6e31\",\n  9: \"#de4e31\",\n  10: \"#de3131\",\n  11: \"#f50202\",\n};\n\nconst Grid = ({ initialBunnies }) => {\n  const [currentBunnies, setCurrentBunnies] = useState(initialBunnies);\n  const [nextBunnies, setNextBunnies] = useState();\n  const [, setStart] = useState(false);\n\n  // const randomBunnies = useMemo(() => shuffleArray(randoms()));\n  // console.log(randomBunnies);\n  useEffect(() => {\n    // animate();\n    let newArray = shuffleArray(currentBunnies);\n    setInterval(() => {\n      setCurrentBunnies(newArray);\n    }, 1000);\n    setStart(!start);\n    // return () => {\n    //   second;\n    // };\n  }, [currentBunnies]);\n  return (\n    <GridDive>\n      {currentBunnies.map((currentBunny) => {\n        let color = currentBunny <= 10 ? colors[currentBunny] : null;\n        return <Cell color={color}>{currentBunny}</Cell>;\n      })}\n    </GridDive>\n  );\n};\n\nexport default Grid;\nconst GridDive = styled.div`\n  display: grid;\n  grid-template-rows: repeat(20, auto);\n  grid-template-columns: repeat(25, auto);\n  height: 90vh;\n  width: 70vw;\n  grid-gap: 5px;\n  border: 1px solid rgb(110, 105, 105);\n`;\n\nconst Cell = styled.div`\n  border-radius: 50%;\n  color: white;\n  background: ${(props) => props.color || \"#f50202\"};\n  display: flex;\n  text-align: center;\n  font-size: 20px;\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,YAAY,QAAQ,UAAU;AAAC;AAExC,MAAMC,MAAM,GAAG;EACb,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,OAAO;EACV,CAAC,EAAE,SAAS;EACZ,CAAC,EAAE,SAAS;EACZ,CAAC,EAAE,SAAS;EACZ,CAAC,EAAE,SAAS;EACZ,CAAC,EAAE,SAAS;EACZ,CAAC,EAAE,SAAS;EACZ,CAAC,EAAE,SAAS;EACZ,EAAE,EAAE,SAAS;EACb,EAAE,EAAE;AACN,CAAC;AAED,MAAMC,IAAI,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EAC9B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAACM,cAAc,CAAC;EACpE,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,EAAE;EAChD,MAAM,GAAGW,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEpC;EACA;EACAE,SAAS,CAAC,MAAM;IACd;IACA,IAAIU,QAAQ,GAAGT,YAAY,CAACI,cAAc,CAAC;IAC3CM,WAAW,CAAC,MAAM;MAChBL,iBAAiB,CAACI,QAAQ,CAAC;IAC7B,CAAC,EAAE,IAAI,CAAC;IACRD,QAAQ,CAAC,CAACG,KAAK,CAAC;IAChB;IACA;IACA;EACF,CAAC,EAAE,CAACP,cAAc,CAAC,CAAC;EACpB,oBACE,QAAC,QAAQ;IAAA,UACNA,cAAc,CAACQ,GAAG,CAAEC,YAAY,IAAK;MACpC,IAAIC,KAAK,GAAGD,YAAY,IAAI,EAAE,GAAGZ,MAAM,CAACY,YAAY,CAAC,GAAG,IAAI;MAC5D,oBAAO,QAAC,IAAI;QAAC,KAAK,EAAEC,KAAM;QAAA,UAAED;MAAY;QAAA;QAAA;QAAA;MAAA,QAAQ;IAClD,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACO;AAEf,CAAC;AAAC,GA1BIX,IAAI;AAAA,KAAJA,IAAI;AA4BV,eAAeA,IAAI;AACnB,MAAMa,QAAQ,GAAGnB,MAAM,CAACoB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MARID,QAAQ;AAUd,MAAME,IAAI,GAAGrB,MAAM,CAACoB,GAAI;AACxB;AACA;AACA,gBAAiBE,KAAK,IAAKA,KAAK,CAACJ,KAAK,IAAI,SAAU;AACpD;AACA;AACA;AACA,CAAC;AAAC,MAPIG,IAAI;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}